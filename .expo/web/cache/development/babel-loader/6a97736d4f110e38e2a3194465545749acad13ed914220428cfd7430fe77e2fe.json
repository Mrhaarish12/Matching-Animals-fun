{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _board = require(\"../constants/board\");\nvar _Deck = _interopRequireDefault(require(\"../Deck\"));\nvar _Button = _interopRequireDefault(require(\"../Button\"));\nvar _CircleButton = _interopRequireDefault(require(\"../CircleButton\"));\nvar _Nameplate = _interopRequireDefault(require(\"../Nameplate\"));\nvar _Table = _interopRequireDefault(require(\"../Table\"));\nvar _Menu = _interopRequireDefault(require(\"../Menu\"));\nvar _Victory = _interopRequireDefault(require(\"../Victory\"));\nvar _game = require(\"./game\");\nvar _Music = require(\"../Music\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _excluded = [\"backToMainMenu\", \"ctx\", \"G\", \"moves\"];\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Estem\\\\Desktop\\\\matchimals.fun-main\\\\src\\\\Matchimals\\\\index.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar Matchimals = function Matchimals(_ref) {\n  var backToMainMenu = _ref.backToMainMenu,\n    ctx = _ref.ctx,\n    G = _ref.G,\n    moves = _ref.moves,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var _useState = (0, _react.useState)(false),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    showMenu = _useState2[0],\n    setShowMenu = _useState2[1];\n  var music = (0, _Music.useMusic)();\n  var tableRef = (0, _react.useRef)();\n  var insets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();\n  var onCardDrop = (0, _react.useCallback)(function (measurements) {\n    var cardLeft = measurements.pageX;\n    var cardTop = measurements.pageY;\n    var tableLeft = tableRef.current._previousLeft;\n    var tableTop = tableRef.current._previousTop;\n    var distanceLeft = Math.abs(tableLeft - cardLeft);\n    var distanceTop = Math.abs(tableTop - cardTop);\n    var cellsFromLeft = Math.round(distanceLeft / _board.cardWidth);\n    var cellsFromTop = Math.round(distanceTop / _board.cardHeight);\n    var targetCell = cellsFromTop * _board.columns + cellsFromLeft;\n    return new Promise(function (resolve) {\n      if ((0, _game.isLegalMove)(G, ctx, targetCell)) {\n        music.playSoundEffect1();\n        moves.placeCard(targetCell);\n      } else {\n        music.playSoundEffect3();\n      }\n      resolve();\n    });\n  }, [G, ctx, moves, music]);\n  var onGamePass = (0, _react.useCallback)(function () {\n    music.playSoundEffect2();\n    moves.pass();\n  }, [moves, music]);\n  return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: styles.root,\n      children: [(0, _jsxRuntime.jsx)(_reactNative.StatusBar, {\n        hidden: true\n      }), (0, _jsxRuntime.jsx)(_Table.default, Object.assign({\n        ref: tableRef,\n        G: G,\n        ctx: ctx\n      }, rest)), (0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: {\n          position: \"absolute\",\n          top: Math.max(insets.top, 16),\n          left: Math.max(insets.left, 16)\n        },\n        children: Object.keys(G.players).map(function (playerIndex) {\n          return (0, _jsxRuntime.jsx)(_Nameplate.default, {\n            player: playerIndex,\n            players: G.players,\n            currentPlayer: ctx.currentPlayer\n          }, playerIndex);\n        })\n      }), (0, _jsxRuntime.jsx)(_Deck.default, {\n        cards: G.deck,\n        onCardDrop: onCardDrop,\n        style: {\n          position: \"absolute\",\n          bottom: Math.max(insets.bottom + _board.cardHeight, 16 + _board.cardHeight),\n          left: Math.max(insets.left, 16)\n        }\n      }), (0, _jsxRuntime.jsx)(_Button.default, {\n        onPress: onGamePass,\n        style: {\n          position: \"absolute\",\n          bottom: Math.max(insets.bottom, 16),\n          right: Math.max(insets.right, 16)\n        },\n        children: \"PASS\"\n      }), (0, _jsxRuntime.jsx)(_CircleButton.default, {\n        onPress: function onPress() {\n          return setShowMenu(true);\n        },\n        style: {\n          position: \"absolute\",\n          top: Math.max(insets.top, 16),\n          right: Math.max(insets.right, 16)\n        },\n        children: \"?\"\n      })]\n    }), ctx.gameover ? (0, _jsxRuntime.jsx)(_Victory.default, {\n      backToMainMenu: backToMainMenu,\n      player: ctx.gameover,\n      players: G.players\n    }) : null, (0, _jsxRuntime.jsx)(_Menu.default, {\n      moves: moves,\n      player: ctx.currentPlayer,\n      backToMainMenu: backToMainMenu,\n      scrollToCenter: function scrollToCenter() {\n        var _tableRef$current;\n        return tableRef == null ? void 0 : (_tableRef$current = tableRef.current) == null ? void 0 : _tableRef$current.scrollToCenter();\n      },\n      isVisible: showMenu,\n      hide: function hide() {\n        return setShowMenu(false);\n      }\n    })]\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  root: {\n    flex: 1\n  }\n});\nvar _default = Matchimals;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeSafeAreaContext","_board","_Deck","_interopRequireDefault","_Button","_CircleButton","_Nameplate","_Table","_Menu","_Victory","_game","_Music","_jsxRuntime","_excluded","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Matchimals","_ref","backToMainMenu","ctx","G","moves","rest","_objectWithoutProperties2","_useState","useState","_useState2","_slicedToArray2","showMenu","setShowMenu","music","useMusic","tableRef","useRef","insets","useSafeAreaInsets","onCardDrop","useCallback","measurements","cardLeft","pageX","cardTop","pageY","tableLeft","current","_previousLeft","tableTop","_previousTop","distanceLeft","Math","abs","distanceTop","cellsFromLeft","round","cardWidth","cellsFromTop","cardHeight","targetCell","columns","Promise","resolve","isLegalMove","playSoundEffect1","placeCard","playSoundEffect3","onGamePass","playSoundEffect2","pass","jsxs","Fragment","children","View","style","styles","root","jsx","StatusBar","hidden","assign","ref","position","top","max","left","keys","players","map","playerIndex","player","currentPlayer","cards","deck","bottom","onPress","right","gameover","scrollToCenter","_tableRef$current","isVisible","hide","StyleSheet","create","flex","_default","exports"],"sources":["C:/Users/Estem/Desktop/matchimals.fun-main/src/Matchimals/index.js"],"sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\nimport { StatusBar, StyleSheet, View } from \"react-native\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\n\nimport { cardHeight, cardWidth, columns } from \"../constants/board\";\nimport Deck from \"../Deck\";\nimport Button from \"../Button\";\nimport CircleButton from \"../CircleButton\";\nimport Nameplate from \"../Nameplate\";\nimport Table from \"../Table\";\nimport Menu from \"../Menu\";\nimport Victory from \"../Victory\";\nimport { isLegalMove } from \"./game\";\nimport { useMusic } from \"../Music\";\n\nconst Matchimals = ({ backToMainMenu, ctx, G, moves, ...rest }) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const music = useMusic();\n  const tableRef = useRef();\n  const insets = useSafeAreaInsets();\n\n  const onCardDrop = useCallback(\n    (measurements) => {\n      // Get the top left corner of the card in relation to the viewport\n      const cardLeft = measurements.pageX;\n      const cardTop = measurements.pageY;\n\n      // Get the top left corner of the viewport in relation to the entire table\n      const tableLeft = tableRef.current._previousLeft;\n      const tableTop = tableRef.current._previousTop;\n\n      // Calculate the total distance from the table's edge to the card's edge\n      const distanceLeft = Math.abs(tableLeft - cardLeft);\n      const distanceTop = Math.abs(tableTop - cardTop);\n\n      // Calculate the total distance in \"cells\"\n      const cellsFromLeft = Math.round(distanceLeft / cardWidth);\n      const cellsFromTop = Math.round(distanceTop / cardHeight);\n\n      // Calculate the target cell's id\n      const targetCell = cellsFromTop * columns + cellsFromLeft;\n\n      return new Promise((resolve) => {\n        if (isLegalMove(G, ctx, targetCell)) {\n          music.playSoundEffect1(); // Play card drop sound effect\n          moves.placeCard(targetCell);\n        } else {\n          music.playSoundEffect3(); // Play mismatched card sound effect\n        }\n        resolve();\n      });\n    },\n    [G, ctx, moves, music]\n  );\n\n  const onGamePass = useCallback(() => {\n    music.playSoundEffect2(); // Play pass card sound effect\n    moves.pass();\n  }, [moves, music]);\n\n  return (\n    <>\n      <View style={styles.root}>\n        <StatusBar hidden />\n        <Table ref={tableRef} G={G} ctx={ctx} {...rest} />\n        <View\n          style={{\n            position: \"absolute\",\n            top: Math.max(insets.top, 16),\n            left: Math.max(insets.left, 16),\n          }}\n        >\n          {Object.keys(G.players).map((playerIndex) => (\n            <Nameplate\n              key={playerIndex}\n              player={playerIndex}\n              players={G.players}\n              currentPlayer={ctx.currentPlayer}\n            />\n          ))}\n        </View>\n        <Deck\n          cards={G.deck}\n          onCardDrop={onCardDrop}\n          style={{\n            position: \"absolute\",\n            bottom: Math.max(insets.bottom + cardHeight, 16 + cardHeight),\n            left: Math.max(insets.left, 16),\n          }}\n        />\n        <Button\n          onPress={onGamePass}\n          style={{\n            position: \"absolute\",\n            bottom: Math.max(insets.bottom, 16),\n            right: Math.max(insets.right, 16),\n          }}\n        >\n          PASS\n        </Button>\n        <CircleButton\n          onPress={() => setShowMenu(true)}\n          style={{\n            position: \"absolute\",\n            top: Math.max(insets.top, 16),\n            right: Math.max(insets.right, 16),\n          }}\n        >\n          ?\n        </CircleButton>\n      </View>\n      {ctx.gameover ? (\n        <Victory\n          backToMainMenu={backToMainMenu}\n          player={ctx.gameover}\n          players={G.players}\n        />\n      ) : null}\n      <Menu\n        moves={moves}\n        player={ctx.currentPlayer}\n        backToMainMenu={backToMainMenu}\n        scrollToCenter={() => tableRef?.current?.scrollToCenter()}\n        isVisible={showMenu}\n        hide={() => setShowMenu(false)}\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n  },\n});\n\nexport default Matchimals;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}